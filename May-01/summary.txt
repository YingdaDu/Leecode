238. Product of Array Except Self
zero corner case
reduce space complexity

415. Add Strings
67. Add Binary

Template:

def binary_search(l, r):
    while (l <= r):
        m = l + (r-l)/2;
        if f(m): return m // Optional
        if g(m):
            r = m-1  // new range[l, m-1]
        else:
            l = m+1 // new range[m+1, r)
     return l or r // depends or not found

     time complexity: O(log(r-1) * (f(m) + g(m)))

find the max in an int array
Arrays.stream(piles).max().getAsInt()

Split string with , and map the string value to double
Stream.of(value.split(",")).map(Double::valueOf).collect(Collectors.toList())

find the frequency in queue/List
int count = Collections.frequency(queue, num);

find the key with largest value
Collections.max(count.entrySet(), Map.Entry.comparingByValue()).getKey();



